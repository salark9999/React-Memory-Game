{"ast":null,"code":"import _slicedToArray from \"D:\\\\Arek\\\\programowanie\\\\CODERSTRUST\\\\React\\\\proba\\\\proba\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Arek\\\\programowanie\\\\CODERSTRUST\\\\React\\\\proba\\\\proba\\\\src\\\\components\\\\counter\\\\Counter.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Counter = ({\n  number\n}) => {\n  const _useState = useState(1),\n        _useState2 = _slicedToArray(_useState, 2),\n        counter = _useState2[0],\n        setCounter = _useState2[1];\n\n  const restFromDividing = counter % number;\n  return React.createElement(\"div\", {\n    onClick: () => {\n      setCounter(counter + 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, counter, \" / \", number, \" =\", restFromDividing === 0 ? '👍' : '👎');\n};\n\nCounter.propTypes = {\n  number: PropTypes.number.isRequired\n};\nexport default Counter;","map":{"version":3,"sources":["D:\\Arek\\programowanie\\CODERSTRUST\\React\\proba\\proba\\src\\components\\counter\\Counter.js"],"names":["React","useState","PropTypes","Counter","number","counter","setCounter","restFromDividing","propTypes","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAGA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAAA,oBACIH,QAAQ,CAAC,CAAD,CADZ;AAAA;AAAA,QACnBI,OADmB;AAAA,QACVC,UADU;;AAE1B,QAAMC,gBAAgB,GAAGF,OAAO,GAAGD,MAAnC;AAEA,SACI;AAAK,IAAA,OAAO,EAAE,MAAM;AAAEE,MAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AAAwB,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,OADL,SACiBD,MADjB,QAEKG,gBAAgB,KAAK,CAArB,GAAyB,IAAzB,GAAgC,IAFrC,CADJ;AAMH,CAVD;;AAYAJ,OAAO,CAACK,SAAR,GAAoB;AAChBJ,EAAAA,MAAM,EAAEF,SAAS,CAACE,MAAV,CAAiBK;AADT,CAApB;AAKA,eAAeN,OAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Counter = ({number}) => {\r\n    const [counter, setCounter] = useState(1);\r\n    const restFromDividing = counter % number;\r\n\r\n    return (\r\n        <div onClick={() => { setCounter(counter + 1)}}>\r\n            {counter} / {number} =\r\n            {restFromDividing === 0 ? '👍' : '👎'}\r\n        </div>\r\n    )\r\n}\r\n\r\nCounter.propTypes = {\r\n    number: PropTypes.number.isRequired,\r\n}\r\n\r\n\r\nexport default Counter;"]},"metadata":{},"sourceType":"module"}