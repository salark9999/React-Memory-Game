{"ast":null,"code":"var _jsxFileName = \"D:\\\\Arek\\\\programowanie\\\\CODERSTRUST\\\\React\\\\proba\\\\proba\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Board from './components/board';\nimport initializeDeck from './deck/deck';\nimport initializeDeckMedium from './deck/deck2';\nimport initializeDeckLevelHard from './deck/deck3';\nimport Easy from '.components/gamelevels/easy';\nimport './App.css';\n\nfunction App() {\n  /* const [cards, setCards] = useState([])\n   const [flipped, setFlipped] = useState([])\n   const [dimension, setDimension] = useState(400)\n   const [solved, setSolved] = useState([])\n   const [disabled, setDisabled] = useState(false)\n    useEffect(() => {\n     resizeBoard()\n     setCards(initializeDeck())\n   }, [])\n    useEffect(() => {\n     preloadImages()\n   }, cards)\n  \n   useEffect(() => {\n     const resizeListener = window.addEventListener('resize', resizeBoard)\n   \n     return () => window.removeEventListener('resize', resizeListener)\n   })\n    const handleClick = (id) => {\n     setDisabled(true)\n     if (flipped.length === 0) {\n       setFlipped([id])\n       setDisabled(false)\n       return\n     } else {\n       if (sameCardClicked(id)) {\n       setDisabled(false)\n       return\n       }\n       setFlipped([flipped[0], id])\n       if (isMatch(id)) {\n         setSolved([...solved, flipped[0], id])\n         setFlipped([])\n         resetCards()\n       } else {\n         setTimeout(resetCards, 1500)\n       }\n     }\n   }\n    const preloadImages = () => {\n     cards.map((card) => {\n       const src = `/img/${card.type}.png`\n       new Image().src = src\n     })\n   }\n   \n   const resetCards = () => {\n     setFlipped([])\n     setDisabled(false)\n   \n   \n    \n    const sameCardClicked = (id) => flipped.includes(id)\n    const isMatch = (id) => {\n     const clickedCard = cards.find((card) => card.id === id)\n     const flippedCard = cards.find((card) => flipped[0] === card.id)\n     return flippedCard.type === clickedCard.type\n   }\n    const resizeBoard = () => {\n     setDimension(Math.min(\n       document.documentElement.clientWidth,\n       document.documentElement.clientHeight,\n     ))\n   } */\n  const startGame = () => {\n    Easy();\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Memory Game\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Match them all !\"), React.createElement(\"button\", {\n    onClick: startGame(Easy),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \" start Game \"));\n}\n\nexport default App;","map":{"version":3,"sources":["D:\\Arek\\programowanie\\CODERSTRUST\\React\\proba\\proba\\src\\App.js"],"names":["React","useState","useEffect","Board","initializeDeck","initializeDeckMedium","initializeDeckLevelHard","Easy","App","startGame"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,cAAP,MAA2B,aAA3B;AACA,OAAOC,oBAAP,MAAiC,cAAjC;AACA,OAAOC,uBAAP,MAAoC,cAApC;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAO,WAAP;;AAGA,SAASC,GAAT,GAAe;AACd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0ED,QAAMC,SAAS,GAAG,MAAM;AACxBF,IAAAA,IAAI;AACH,GAFD;;AAGE,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,EAKI;AACE,IAAA,OAAO,EAAEE,SAAS,CAACF,IAAD,CADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,CADF;AAYD;;AAED,eAAeC,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Board from './components/board';\nimport initializeDeck from './deck/deck';\nimport initializeDeckMedium from './deck/deck2';\nimport initializeDeckLevelHard from './deck/deck3';\nimport Easy from '.components/gamelevels/easy';\nimport './App.css';\n\n\nfunction App() {\n /* const [cards, setCards] = useState([])\n  const [flipped, setFlipped] = useState([])\n  const [dimension, setDimension] = useState(400)\n  const [solved, setSolved] = useState([])\n  const [disabled, setDisabled] = useState(false)\n\n  useEffect(() => {\n    resizeBoard()\n    setCards(initializeDeck())\n  }, [])\n\n  useEffect(() => {\n    preloadImages()\n  }, cards)\n\n\n  useEffect(() => {\n    const resizeListener = window.addEventListener('resize', resizeBoard)\n  \n    return () => window.removeEventListener('resize', resizeListener)\n  })\n\n  const handleClick = (id) => {\n    setDisabled(true)\n    if (flipped.length === 0) {\n      setFlipped([id])\n      setDisabled(false)\n      return\n    } else {\n      if (sameCardClicked(id)) {\n      setDisabled(false)\n      return\n      }\n      setFlipped([flipped[0], id])\n      if (isMatch(id)) {\n        setSolved([...solved, flipped[0], id])\n        setFlipped([])\n        resetCards()\n      } else {\n        setTimeout(resetCards, 1500)\n      }\n    }\n  }\n\n  const preloadImages = () => {\n    cards.map((card) => {\n      const src = `/img/${card.type}.png`\n      new Image().src = src\n    })\n  }\n  \n  const resetCards = () => {\n    setFlipped([])\n    setDisabled(false)\n  \n  \n   \n\n  const sameCardClicked = (id) => flipped.includes(id)\n\n  const isMatch = (id) => {\n    const clickedCard = cards.find((card) => card.id === id)\n    const flippedCard = cards.find((card) => flipped[0] === card.id)\n    return flippedCard.type === clickedCard.type\n  }\n\n  const resizeBoard = () => {\n    setDimension(Math.min(\n      document.documentElement.clientWidth,\n      document.documentElement.clientHeight,\n    ))\n  } */\n\n\nconst startGame = () => {\nEasy()\n}\n  return (\n    <div className=\"App\">\n      <h1>Memory Game</h1>\n      <h2>Match them all !</h2>\n   \n        \n        <button\n          onClick={startGame(Easy)}\n        > start Game </button>\n      </div> \n    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}