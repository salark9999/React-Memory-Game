{"ast":null,"code":"import _slicedToArray from \"D:\\\\Arek\\\\programowanie\\\\CODERSTRUST\\\\React\\\\proba\\\\proba\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Arek\\\\programowanie\\\\CODERSTRUST\\\\React\\\\proba\\\\proba\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Board from './components/board';\nimport initializeDeck from './components/gamelevels/deck';\nimport initializeDeckMedium from './deck/deck2';\nimport initializeDeckLevelHard from './deck/deck3';\nimport Easy from './components/gamelevels/easy';\nimport Counter from './components/counter/Counter';\nimport EventHandler from './components/EventHandler/EventHandler';\nimport './App.css';\n\nfunction App() {\n  const _useState = useState(1),\n        _useState2 = _slicedToArray(_useState, 2),\n        Counter = _useState2[0],\n        setCounter = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        cards = _useState4[0],\n        setCards = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        flipped = _useState6[0],\n        setFlipped = _useState6[1];\n\n  const _useState7 = useState(400),\n        _useState8 = _slicedToArray(_useState7, 2),\n        dimension = _useState8[0],\n        setDimension = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        solved = _useState10[0],\n        setSolved = _useState10[1];\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        disabled = _useState12[0],\n        setDisabled = _useState12[1];\n\n  useEffect(() => {\n    resizeBoard();\n    setCards(initializeDeck());\n  }, []);\n  useEffect(() => {\n    preloadImages();\n  }, cards);\n  useEffect(() => {\n    const resizeListener = window.addEventListener('resize', resizeBoard);\n    return () => window.removeEventListener('resize', resizeListener);\n  });\n\n  const handleClick = id => {\n    setDisabled(true);\n\n    if (flipped.length === 0) {\n      setFlipped([id]);\n      setDisabled(false);\n      return;\n    } else {\n      if (sameCardClicked(id)) {\n        setDisabled(false);\n        return;\n      }\n\n      setFlipped([flipped[0], id]);\n\n      if (isMatch(id)) {\n        setSolved([...solved, flipped[0], id]);\n        setFlipped([]);\n        resetCards();\n      } else {\n        setTimeout(resetCards, 1500);\n      }\n    }\n  };\n\n  const preloadImages = () => {\n    cards.map(card => {\n      const src = \"/img/\".concat(card.type, \".png\");\n      new Image().src = src;\n    });\n  };\n\n  const resetCards = () => {\n    setFlipped([]);\n    setDisabled(false);\n  };\n\n  const startGame = () => {};\n\n  const sameCardClicked = id => flipped.includes(id);\n\n  const isMatch = id => {\n    const clickedCard = cards.find(card => card.id === id);\n    const flippedCard = cards.find(card => flipped[0] === card.id);\n    return flippedCard.type === clickedCard.type;\n  };\n\n  const resizeBoard = () => {\n    setDimension(Math.min(document.documentElement.clientWidth, document.documentElement.clientHeight));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Memory Game\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Match them all !\"), React.createElement(\"button\", {\n    className: \"board\",\n    onClick: Board = () => {\n      dimension = {\n        dimension\n      };\n      cards = {\n        cards\n      };\n      flipped = {\n        flipped\n      };\n      handleClick = {\n        handleClick\n      };\n      disabled = {\n        disabled\n      };\n      solved = {\n        solved\n      };\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["D:\\Arek\\programowanie\\CODERSTRUST\\React\\proba\\proba\\src\\App.js"],"names":["React","useState","useEffect","Board","initializeDeck","initializeDeckMedium","initializeDeckLevelHard","Easy","Counter","EventHandler","App","setCounter","cards","setCards","flipped","setFlipped","dimension","setDimension","solved","setSolved","disabled","setDisabled","resizeBoard","preloadImages","resizeListener","window","addEventListener","removeEventListener","handleClick","id","length","sameCardClicked","isMatch","resetCards","setTimeout","map","card","src","type","Image","startGame","includes","clickedCard","find","flippedCard","Math","min","document","documentElement","clientWidth","clientHeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Board from './components/board';\nimport initializeDeck from './components/gamelevels/deck';\nimport initializeDeckMedium from './deck/deck2';\nimport initializeDeckLevelHard from './deck/deck3';\nimport Easy from './components/gamelevels/easy';\nimport Counter from './components/counter/Counter';\nimport EventHandler from './components/EventHandler/EventHandler';\n\nimport './App.css';\n\n\n\nfunction App() {\n  const [Counter, setCounter] = useState(1);\n  const [cards, setCards] = useState([])\n  const [flipped, setFlipped] = useState([])\n  const [dimension, setDimension] = useState(400)\n  const [solved, setSolved] = useState([])\n  const [disabled, setDisabled] = useState(false)\n\n  useEffect(() => {\n    resizeBoard()\n    setCards(initializeDeck())\n  }, [])\n\n  useEffect(() => {\n    preloadImages()\n  }, cards)\n\n\n  useEffect(() => {\n    const resizeListener = window.addEventListener('resize', resizeBoard)\n  \n    return () => window.removeEventListener('resize', resizeListener)\n  })\n\n  const handleClick = (id) => {\n    setDisabled(true)\n    if (flipped.length === 0) {\n      setFlipped([id])\n      setDisabled(false)\n      return\n    } else {\n      if (sameCardClicked(id)) {\n      setDisabled(false)\n      return\n      }\n      setFlipped([flipped[0], id])\n      if (isMatch(id)) {\n        setSolved([...solved, flipped[0], id])\n        setFlipped([])\n        resetCards()\n      } else {\n        setTimeout(resetCards, 1500)\n      }\n    }\n  }\n\n  const preloadImages = () => {\n    cards.map((card) => {\n      const src = `/img/${card.type}.png`\n      new Image().src = src\n    })\n  }\n  \n  const resetCards = () => {\n    setFlipped([])\n    setDisabled(false)\n  \n  }\n  const startGame = () => {\n  \n  }\n  \n\n  const sameCardClicked = (id) => flipped.includes(id)\n\n  const isMatch = (id) => {\n    const clickedCard = cards.find((card) => card.id === id)\n    const flippedCard = cards.find((card) => flipped[0] === card.id)\n    return flippedCard.type === clickedCard.type\n  }\n\n  const resizeBoard = () => {\n    setDimension(Math.min(\n      document.documentElement.clientWidth,\n      document.documentElement.clientHeight,\n    ))\n  } \n\n\n  return (\n    <div className=\"App\">\n      <h1>Memory Game</h1>\n      <h2>Match them all !</h2>\n      <button className=\"board\" onClick={\n        Board= () => {\n          dimension = { dimension }\n          cards = {cards}\n          flipped = {flipped}\n          handleClick = {handleClick}\n          disabled = {disabled}\n          solved = { solved }\n      }}\n      >\n      </button> \n    </div>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}