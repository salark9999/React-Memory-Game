{"ast":null,"code":"import _slicedToArray from \"D:\\\\Arek\\\\programowanie\\\\CODERSTRUST\\\\React\\\\proba\\\\proba\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Arek\\\\programowanie\\\\CODERSTRUST\\\\React\\\\proba\\\\proba\\\\src\\\\components\\\\EventHandler\\\\EventHandler.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Board from '../board';\nimport initializeDeck from '../gamelevels/deck';\nimport Counter from '../counter/Counter';\nimport '../gamelevels/easy.css';\n\nconst EventHandler = props => {\n  return React.createElement(\"div\", {\n    onClick: () => {\n      Easy;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  });\n};\n\nfunction Easy() {\n  const _useState = useState(1),\n        _useState2 = _slicedToArray(_useState, 2),\n        Counter = _useState2[0],\n        setCounter = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        cards = _useState4[0],\n        setCards = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        flipped = _useState6[0],\n        setFlipped = _useState6[1];\n\n  const _useState7 = useState(400),\n        _useState8 = _slicedToArray(_useState7, 2),\n        dimension = _useState8[0],\n        setDimension = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        solved = _useState10[0],\n        setSolved = _useState10[1];\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        disabled = _useState12[0],\n        setDisabled = _useState12[1];\n\n  useEffect(() => {\n    resizeBoard();\n    setCards(initializeDeck());\n  }, []);\n  useEffect(() => {\n    preloadImages();\n  }, cards);\n  useEffect(() => {\n    const resizeListener = window.addEventListener('resize', resizeBoard);\n    return () => window.removeEventListener('resize', resizeListener);\n  });\n\n  const handleClick = id => {\n    setDisabled(true);\n\n    if (flipped.length === 0) {\n      setFlipped([id]);\n      setDisabled(false);\n      return;\n    } else {\n      if (sameCardClicked(id)) {\n        setDisabled(false);\n        return;\n      }\n\n      setFlipped([flipped[0], id]);\n\n      if (isMatch(id)) {\n        setSolved([...solved, flipped[0], id]);\n        setFlipped([]);\n        resetCards();\n      } else {\n        setTimeout(resetCards, 1500);\n      }\n    }\n  };\n\n  const preloadImages = () => {\n    cards.map(card => {\n      const src = \"/img/\".concat(card.type, \".png\");\n      new Image().src = src;\n    });\n  };\n\n  const resetCards = () => {\n    setFlipped([]);\n    setDisabled(false);\n  };\n\n  const startGame = () => {};\n\n  const sameCardClicked = id => flipped.includes(id);\n\n  const isMatch = id => {\n    const clickedCard = cards.find(card => card.id === id);\n    const flippedCard = cards.find(card => flipped[0] === card.id);\n    return flippedCard.type === clickedCard.type;\n  };\n\n  const resizeBoard = () => {\n    setDimension(Math.min(document.documentElement.clientWidth, document.documentElement.clientHeight));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Memory Game\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Match them all !\"), React.createElement(\"div\", {\n    className: \"board\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Board, {\n    className: \"board\",\n    dimension: dimension,\n    cards: cards,\n    flipped: flipped,\n    handleClick: handleClick,\n    disabled: disabled,\n    solved: solved,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })));\n}\n\nEventHandler.defaultProps = {};\nEventHandler.defaultProps = {};\nexport default EventHandler;","map":{"version":3,"sources":["D:\\Arek\\programowanie\\CODERSTRUST\\React\\proba\\proba\\src\\components\\EventHandler\\EventHandler.jsx"],"names":["React","useState","useEffect","PropTypes","Board","initializeDeck","Counter","EventHandler","props","Easy","setCounter","cards","setCards","flipped","setFlipped","dimension","setDimension","solved","setSolved","disabled","setDisabled","resizeBoard","preloadImages","resizeListener","window","addEventListener","removeEventListener","handleClick","id","length","sameCardClicked","isMatch","resetCards","setTimeout","map","card","src","type","Image","startGame","includes","clickedCard","find","flippedCard","Math","min","document","documentElement","clientWidth","clientHeight","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Board from '../board';\r\nimport initializeDeck from '../gamelevels/deck';\r\nimport Counter from '../counter/Counter';\r\n\r\nimport '../gamelevels/easy.css';\r\n\r\n\r\nconst EventHandler = props => {\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        Easy\r\n      }}\r\n    >\r\n      \r\n    </div >\r\n  )\r\n}\r\nfunction Easy() {\r\n  const [Counter, setCounter] = useState(1);\r\n  const [cards, setCards] = useState([])\r\n  const [flipped, setFlipped] = useState([])\r\n  const [dimension, setDimension] = useState(400)\r\n  const [solved, setSolved] = useState([])\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  useEffect(() => {\r\n    resizeBoard()\r\n    setCards(initializeDeck())\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    preloadImages()\r\n  }, cards)\r\n\r\n\r\n  useEffect(() => {\r\n    const resizeListener = window.addEventListener('resize', resizeBoard)\r\n  \r\n    return () => window.removeEventListener('resize', resizeListener)\r\n  })\r\n\r\n  const handleClick = (id) => {\r\n    setDisabled(true)\r\n    if (flipped.length === 0) {\r\n      setFlipped([id])\r\n      setDisabled(false)\r\n      return\r\n    } else {\r\n      if (sameCardClicked(id)) {\r\n      setDisabled(false)\r\n      return\r\n      }\r\n      setFlipped([flipped[0], id])\r\n      if (isMatch(id)) {\r\n        setSolved([...solved, flipped[0], id])\r\n        setFlipped([])\r\n        resetCards()\r\n      } else {\r\n        setTimeout(resetCards, 1500)\r\n      }\r\n    }\r\n  }\r\n\r\n  const preloadImages = () => {\r\n    cards.map((card) => {\r\n      const src = `/img/${card.type}.png`\r\n      new Image().src = src\r\n    })\r\n  }\r\n  \r\n  const resetCards = () => {\r\n    setFlipped([])\r\n    setDisabled(false)\r\n  \r\n  }\r\n  const startGame = () => {\r\n  \r\n  }\r\n  \r\n\r\n  const sameCardClicked = (id) => flipped.includes(id)\r\n\r\n  const isMatch = (id) => {\r\n    const clickedCard = cards.find((card) => card.id === id)\r\n    const flippedCard = cards.find((card) => flipped[0] === card.id)\r\n    return flippedCard.type === clickedCard.type\r\n  }\r\n\r\n  const resizeBoard = () => {\r\n    setDimension(Math.min(\r\n      document.documentElement.clientWidth,\r\n      document.documentElement.clientHeight,\r\n    ))\r\n  } \r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Memory Game</h1>\r\n      <h2>Match them all !</h2>\r\n    <div className=\"board\">\r\n     <Board className=\"board\"\r\n     dimension={dimension}\r\n     cards={cards}\r\n     flipped={flipped}\r\n     handleClick={handleClick}\r\n     disabled={disabled}\r\n     solved={solved}\r\n          />\r\n  \r\n      </div> \r\n    </div>\r\n  );\r\n}\r\n            \r\nEventHandler.defaultProps = {};\r\nEventHandler.defaultProps = {};\r\n\r\nexport default EventHandler;\r\n"]},"metadata":{},"sourceType":"module"}